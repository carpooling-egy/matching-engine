// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: transit.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transit_VehicleType int32

const (
	Transit_kTram      Transit_VehicleType = 0
	Transit_kMetro     Transit_VehicleType = 1
	Transit_kRail      Transit_VehicleType = 2
	Transit_kBus       Transit_VehicleType = 3
	Transit_kFerry     Transit_VehicleType = 4
	Transit_kCableCar  Transit_VehicleType = 5
	Transit_kGondola   Transit_VehicleType = 6
	Transit_kFunicular Transit_VehicleType = 7
)

// Enum value maps for Transit_VehicleType.
var (
	Transit_VehicleType_name = map[int32]string{
		0: "kTram",
		1: "kMetro",
		2: "kRail",
		3: "kBus",
		4: "kFerry",
		5: "kCableCar",
		6: "kGondola",
		7: "kFunicular",
	}
	Transit_VehicleType_value = map[string]int32{
		"kTram":      0,
		"kMetro":     1,
		"kRail":      2,
		"kBus":       3,
		"kFerry":     4,
		"kCableCar":  5,
		"kGondola":   6,
		"kFunicular": 7,
	}
)

func (x Transit_VehicleType) Enum() *Transit_VehicleType {
	p := new(Transit_VehicleType)
	*p = x
	return p
}

func (x Transit_VehicleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transit_VehicleType) Descriptor() protoreflect.EnumDescriptor {
	return file_transit_proto_enumTypes[0].Descriptor()
}

func (Transit_VehicleType) Type() protoreflect.EnumType {
	return &file_transit_proto_enumTypes[0]
}

func (x Transit_VehicleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Transit_VehicleType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Transit_VehicleType(num)
	return nil
}

// Deprecated: Use Transit_VehicleType.Descriptor instead.
func (Transit_VehicleType) EnumDescriptor() ([]byte, []int) {
	return file_transit_proto_rawDescGZIP(), []int{0, 0}
}

type Transit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Transit_Node        `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	StopPairs     []*Transit_StopPair    `protobuf:"bytes,2,rep,name=stop_pairs,json=stopPairs" json:"stop_pairs,omitempty"`
	Routes        []*Transit_Route       `protobuf:"bytes,3,rep,name=routes" json:"routes,omitempty"`
	Shapes        []*Transit_Shape       `protobuf:"bytes,4,rep,name=shapes" json:"shapes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transit) Reset() {
	*x = Transit{}
	mi := &file_transit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transit) ProtoMessage() {}

func (x *Transit) ProtoReflect() protoreflect.Message {
	mi := &file_transit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transit.ProtoReflect.Descriptor instead.
func (*Transit) Descriptor() ([]byte, []int) {
	return file_transit_proto_rawDescGZIP(), []int{0}
}

func (x *Transit) GetNodes() []*Transit_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Transit) GetStopPairs() []*Transit_StopPair {
	if x != nil {
		return x.StopPairs
	}
	return nil
}

func (x *Transit) GetRoutes() []*Transit_Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Transit) GetShapes() []*Transit_Shape {
	if x != nil {
		return x.Shapes
	}
	return nil
}

type Transit_Node struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Lon                *float64               `protobuf:"fixed64,1,opt,name=lon" json:"lon,omitempty"`
	Lat                *float64               `protobuf:"fixed64,2,opt,name=lat" json:"lat,omitempty"`
	Type               *uint32                `protobuf:"varint,3,opt,name=type" json:"type,omitempty"` // comes from baldr::NodeType
	Graphid            *uint64                `protobuf:"varint,4,opt,name=graphid" json:"graphid,omitempty"`
	PrevTypeGraphid    *uint64                `protobuf:"varint,5,opt,name=prev_type_graphid,json=prevTypeGraphid" json:"prev_type_graphid,omitempty"`
	Name               *string                `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	OnestopId          *string                `protobuf:"bytes,7,opt,name=onestop_id,json=onestopId" json:"onestop_id,omitempty"`
	OsmConnectingWayId *uint64                `protobuf:"varint,8,opt,name=osm_connecting_way_id,json=osmConnectingWayId" json:"osm_connecting_way_id,omitempty"` // use as a hint to connect to osm
	Timezone           *string                `protobuf:"bytes,9,opt,name=timezone" json:"timezone,omitempty"`
	WheelchairBoarding *bool                  `protobuf:"varint,10,opt,name=wheelchair_boarding,json=wheelchairBoarding" json:"wheelchair_boarding,omitempty"`
	Generated          *bool                  `protobuf:"varint,11,opt,name=generated" json:"generated,omitempty"`
	Traversability     *uint32                `protobuf:"varint,12,opt,name=traversability" json:"traversability,omitempty"`
	OsmConnectingLon   *float64               `protobuf:"fixed64,13,opt,name=osm_connecting_lon,json=osmConnectingLon" json:"osm_connecting_lon,omitempty"` // use as a hint to connect to osm
	OsmConnectingLat   *float64               `protobuf:"fixed64,14,opt,name=osm_connecting_lat,json=osmConnectingLat" json:"osm_connecting_lat,omitempty"` // use as a hint to connect to osm
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Transit_Node) Reset() {
	*x = Transit_Node{}
	mi := &file_transit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transit_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transit_Node) ProtoMessage() {}

func (x *Transit_Node) ProtoReflect() protoreflect.Message {
	mi := &file_transit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transit_Node.ProtoReflect.Descriptor instead.
func (*Transit_Node) Descriptor() ([]byte, []int) {
	return file_transit_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Transit_Node) GetLon() float64 {
	if x != nil && x.Lon != nil {
		return *x.Lon
	}
	return 0
}

func (x *Transit_Node) GetLat() float64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *Transit_Node) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Transit_Node) GetGraphid() uint64 {
	if x != nil && x.Graphid != nil {
		return *x.Graphid
	}
	return 0
}

func (x *Transit_Node) GetPrevTypeGraphid() uint64 {
	if x != nil && x.PrevTypeGraphid != nil {
		return *x.PrevTypeGraphid
	}
	return 0
}

func (x *Transit_Node) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Transit_Node) GetOnestopId() string {
	if x != nil && x.OnestopId != nil {
		return *x.OnestopId
	}
	return ""
}

func (x *Transit_Node) GetOsmConnectingWayId() uint64 {
	if x != nil && x.OsmConnectingWayId != nil {
		return *x.OsmConnectingWayId
	}
	return 0
}

func (x *Transit_Node) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

func (x *Transit_Node) GetWheelchairBoarding() bool {
	if x != nil && x.WheelchairBoarding != nil {
		return *x.WheelchairBoarding
	}
	return false
}

func (x *Transit_Node) GetGenerated() bool {
	if x != nil && x.Generated != nil {
		return *x.Generated
	}
	return false
}

func (x *Transit_Node) GetTraversability() uint32 {
	if x != nil && x.Traversability != nil {
		return *x.Traversability
	}
	return 0
}

func (x *Transit_Node) GetOsmConnectingLon() float64 {
	if x != nil && x.OsmConnectingLon != nil {
		return *x.OsmConnectingLon
	}
	return 0
}

func (x *Transit_Node) GetOsmConnectingLat() float64 {
	if x != nil && x.OsmConnectingLat != nil {
		return *x.OsmConnectingLat
	}
	return 0
}

type Transit_StopPair struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	BikesAllowed            *bool                  `protobuf:"varint,1,opt,name=bikes_allowed,json=bikesAllowed" json:"bikes_allowed,omitempty"`
	BlockId                 *uint32                `protobuf:"varint,2,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	DestinationArrivalTime  *uint32                `protobuf:"varint,3,opt,name=destination_arrival_time,json=destinationArrivalTime" json:"destination_arrival_time,omitempty"`
	DestinationGraphid      *uint64                `protobuf:"varint,4,opt,name=destination_graphid,json=destinationGraphid" json:"destination_graphid,omitempty"`
	DestinationOnestopId    *string                `protobuf:"bytes,5,opt,name=destination_onestop_id,json=destinationOnestopId" json:"destination_onestop_id,omitempty"`
	OperatedByOnestopId     *string                `protobuf:"bytes,6,opt,name=operated_by_onestop_id,json=operatedByOnestopId" json:"operated_by_onestop_id,omitempty"`
	OriginDepartureTime     *uint32                `protobuf:"varint,7,opt,name=origin_departure_time,json=originDepartureTime" json:"origin_departure_time,omitempty"`
	OriginGraphid           *uint64                `protobuf:"varint,8,opt,name=origin_graphid,json=originGraphid" json:"origin_graphid,omitempty"`
	OriginOnestopId         *string                `protobuf:"bytes,9,opt,name=origin_onestop_id,json=originOnestopId" json:"origin_onestop_id,omitempty"`
	RouteIndex              *uint32                `protobuf:"varint,10,opt,name=route_index,json=routeIndex" json:"route_index,omitempty"`
	ServiceAddedDates       []uint32               `protobuf:"varint,11,rep,name=service_added_dates,json=serviceAddedDates" json:"service_added_dates,omitempty"`
	ServiceDaysOfWeek       []bool                 `protobuf:"varint,12,rep,name=service_days_of_week,json=serviceDaysOfWeek" json:"service_days_of_week,omitempty"`
	ServiceEndDate          *uint32                `protobuf:"varint,13,opt,name=service_end_date,json=serviceEndDate" json:"service_end_date,omitempty"`
	ServiceExceptDates      []uint32               `protobuf:"varint,14,rep,name=service_except_dates,json=serviceExceptDates" json:"service_except_dates,omitempty"`
	ServiceStartDate        *uint32                `protobuf:"varint,15,opt,name=service_start_date,json=serviceStartDate" json:"service_start_date,omitempty"`
	TripHeadsign            *string                `protobuf:"bytes,16,opt,name=trip_headsign,json=tripHeadsign" json:"trip_headsign,omitempty"`
	TripId                  *uint32                `protobuf:"varint,17,opt,name=trip_id,json=tripId" json:"trip_id,omitempty"`
	WheelchairAccessible    *bool                  `protobuf:"varint,18,opt,name=wheelchair_accessible,json=wheelchairAccessible" json:"wheelchair_accessible,omitempty"`
	ShapeId                 *uint32                `protobuf:"varint,20,opt,name=shape_id,json=shapeId" json:"shape_id,omitempty"`
	OriginDistTraveled      *float32               `protobuf:"fixed32,21,opt,name=origin_dist_traveled,json=originDistTraveled" json:"origin_dist_traveled,omitempty"`
	DestinationDistTraveled *float32               `protobuf:"fixed32,22,opt,name=destination_dist_traveled,json=destinationDistTraveled" json:"destination_dist_traveled,omitempty"`
	FrequencyEndTime        *uint32                `protobuf:"varint,23,opt,name=frequency_end_time,json=frequencyEndTime" json:"frequency_end_time,omitempty"`
	FrequencyHeadwaySeconds *uint32                `protobuf:"varint,24,opt,name=frequency_headway_seconds,json=frequencyHeadwaySeconds" json:"frequency_headway_seconds,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Transit_StopPair) Reset() {
	*x = Transit_StopPair{}
	mi := &file_transit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transit_StopPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transit_StopPair) ProtoMessage() {}

func (x *Transit_StopPair) ProtoReflect() protoreflect.Message {
	mi := &file_transit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transit_StopPair.ProtoReflect.Descriptor instead.
func (*Transit_StopPair) Descriptor() ([]byte, []int) {
	return file_transit_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Transit_StopPair) GetBikesAllowed() bool {
	if x != nil && x.BikesAllowed != nil {
		return *x.BikesAllowed
	}
	return false
}

func (x *Transit_StopPair) GetBlockId() uint32 {
	if x != nil && x.BlockId != nil {
		return *x.BlockId
	}
	return 0
}

func (x *Transit_StopPair) GetDestinationArrivalTime() uint32 {
	if x != nil && x.DestinationArrivalTime != nil {
		return *x.DestinationArrivalTime
	}
	return 0
}

func (x *Transit_StopPair) GetDestinationGraphid() uint64 {
	if x != nil && x.DestinationGraphid != nil {
		return *x.DestinationGraphid
	}
	return 0
}

func (x *Transit_StopPair) GetDestinationOnestopId() string {
	if x != nil && x.DestinationOnestopId != nil {
		return *x.DestinationOnestopId
	}
	return ""
}

func (x *Transit_StopPair) GetOperatedByOnestopId() string {
	if x != nil && x.OperatedByOnestopId != nil {
		return *x.OperatedByOnestopId
	}
	return ""
}

func (x *Transit_StopPair) GetOriginDepartureTime() uint32 {
	if x != nil && x.OriginDepartureTime != nil {
		return *x.OriginDepartureTime
	}
	return 0
}

func (x *Transit_StopPair) GetOriginGraphid() uint64 {
	if x != nil && x.OriginGraphid != nil {
		return *x.OriginGraphid
	}
	return 0
}

func (x *Transit_StopPair) GetOriginOnestopId() string {
	if x != nil && x.OriginOnestopId != nil {
		return *x.OriginOnestopId
	}
	return ""
}

func (x *Transit_StopPair) GetRouteIndex() uint32 {
	if x != nil && x.RouteIndex != nil {
		return *x.RouteIndex
	}
	return 0
}

func (x *Transit_StopPair) GetServiceAddedDates() []uint32 {
	if x != nil {
		return x.ServiceAddedDates
	}
	return nil
}

func (x *Transit_StopPair) GetServiceDaysOfWeek() []bool {
	if x != nil {
		return x.ServiceDaysOfWeek
	}
	return nil
}

func (x *Transit_StopPair) GetServiceEndDate() uint32 {
	if x != nil && x.ServiceEndDate != nil {
		return *x.ServiceEndDate
	}
	return 0
}

func (x *Transit_StopPair) GetServiceExceptDates() []uint32 {
	if x != nil {
		return x.ServiceExceptDates
	}
	return nil
}

func (x *Transit_StopPair) GetServiceStartDate() uint32 {
	if x != nil && x.ServiceStartDate != nil {
		return *x.ServiceStartDate
	}
	return 0
}

func (x *Transit_StopPair) GetTripHeadsign() string {
	if x != nil && x.TripHeadsign != nil {
		return *x.TripHeadsign
	}
	return ""
}

func (x *Transit_StopPair) GetTripId() uint32 {
	if x != nil && x.TripId != nil {
		return *x.TripId
	}
	return 0
}

func (x *Transit_StopPair) GetWheelchairAccessible() bool {
	if x != nil && x.WheelchairAccessible != nil {
		return *x.WheelchairAccessible
	}
	return false
}

func (x *Transit_StopPair) GetShapeId() uint32 {
	if x != nil && x.ShapeId != nil {
		return *x.ShapeId
	}
	return 0
}

func (x *Transit_StopPair) GetOriginDistTraveled() float32 {
	if x != nil && x.OriginDistTraveled != nil {
		return *x.OriginDistTraveled
	}
	return 0
}

func (x *Transit_StopPair) GetDestinationDistTraveled() float32 {
	if x != nil && x.DestinationDistTraveled != nil {
		return *x.DestinationDistTraveled
	}
	return 0
}

func (x *Transit_StopPair) GetFrequencyEndTime() uint32 {
	if x != nil && x.FrequencyEndTime != nil {
		return *x.FrequencyEndTime
	}
	return 0
}

func (x *Transit_StopPair) GetFrequencyHeadwaySeconds() uint32 {
	if x != nil && x.FrequencyHeadwaySeconds != nil {
		return *x.FrequencyHeadwaySeconds
	}
	return 0
}

type Transit_Route struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Name                *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OnestopId           *string                `protobuf:"bytes,2,opt,name=onestop_id,json=onestopId" json:"onestop_id,omitempty"`
	OperatedByName      *string                `protobuf:"bytes,3,opt,name=operated_by_name,json=operatedByName" json:"operated_by_name,omitempty"`
	OperatedByOnestopId *string                `protobuf:"bytes,4,opt,name=operated_by_onestop_id,json=operatedByOnestopId" json:"operated_by_onestop_id,omitempty"`
	OperatedByWebsite   *string                `protobuf:"bytes,5,opt,name=operated_by_website,json=operatedByWebsite" json:"operated_by_website,omitempty"`
	RouteColor          *uint32                `protobuf:"varint,6,opt,name=route_color,json=routeColor" json:"route_color,omitempty"`
	RouteDesc           *string                `protobuf:"bytes,7,opt,name=route_desc,json=routeDesc" json:"route_desc,omitempty"`
	RouteLongName       *string                `protobuf:"bytes,8,opt,name=route_long_name,json=routeLongName" json:"route_long_name,omitempty"`
	RouteTextColor      *uint32                `protobuf:"varint,9,opt,name=route_text_color,json=routeTextColor" json:"route_text_color,omitempty"`
	VehicleType         *Transit_VehicleType   `protobuf:"varint,10,opt,name=vehicle_type,json=vehicleType,enum=valhalla.mjolnir.Transit_VehicleType" json:"vehicle_type,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Transit_Route) Reset() {
	*x = Transit_Route{}
	mi := &file_transit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transit_Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transit_Route) ProtoMessage() {}

func (x *Transit_Route) ProtoReflect() protoreflect.Message {
	mi := &file_transit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transit_Route.ProtoReflect.Descriptor instead.
func (*Transit_Route) Descriptor() ([]byte, []int) {
	return file_transit_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Transit_Route) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Transit_Route) GetOnestopId() string {
	if x != nil && x.OnestopId != nil {
		return *x.OnestopId
	}
	return ""
}

func (x *Transit_Route) GetOperatedByName() string {
	if x != nil && x.OperatedByName != nil {
		return *x.OperatedByName
	}
	return ""
}

func (x *Transit_Route) GetOperatedByOnestopId() string {
	if x != nil && x.OperatedByOnestopId != nil {
		return *x.OperatedByOnestopId
	}
	return ""
}

func (x *Transit_Route) GetOperatedByWebsite() string {
	if x != nil && x.OperatedByWebsite != nil {
		return *x.OperatedByWebsite
	}
	return ""
}

func (x *Transit_Route) GetRouteColor() uint32 {
	if x != nil && x.RouteColor != nil {
		return *x.RouteColor
	}
	return 0
}

func (x *Transit_Route) GetRouteDesc() string {
	if x != nil && x.RouteDesc != nil {
		return *x.RouteDesc
	}
	return ""
}

func (x *Transit_Route) GetRouteLongName() string {
	if x != nil && x.RouteLongName != nil {
		return *x.RouteLongName
	}
	return ""
}

func (x *Transit_Route) GetRouteTextColor() uint32 {
	if x != nil && x.RouteTextColor != nil {
		return *x.RouteTextColor
	}
	return 0
}

func (x *Transit_Route) GetVehicleType() Transit_VehicleType {
	if x != nil && x.VehicleType != nil {
		return *x.VehicleType
	}
	return Transit_kTram
}

type Transit_Shape struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShapeId       *uint32                `protobuf:"varint,1,opt,name=shape_id,json=shapeId" json:"shape_id,omitempty"`
	EncodedShape  []byte                 `protobuf:"bytes,2,opt,name=encoded_shape,json=encodedShape" json:"encoded_shape,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transit_Shape) Reset() {
	*x = Transit_Shape{}
	mi := &file_transit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transit_Shape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transit_Shape) ProtoMessage() {}

func (x *Transit_Shape) ProtoReflect() protoreflect.Message {
	mi := &file_transit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transit_Shape.ProtoReflect.Descriptor instead.
func (*Transit_Shape) Descriptor() ([]byte, []int) {
	return file_transit_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Transit_Shape) GetShapeId() uint32 {
	if x != nil && x.ShapeId != nil {
		return *x.ShapeId
	}
	return 0
}

func (x *Transit_Shape) GetEncodedShape() []byte {
	if x != nil {
		return x.EncodedShape
	}
	return nil
}

var File_transit_proto protoreflect.FileDescriptor

const file_transit_proto_rawDesc = "" +
	"\n" +
	"\rtransit.proto\x12\x10valhalla.mjolnir\"\xd1\x12\n" +
	"\aTransit\x124\n" +
	"\x05nodes\x18\x01 \x03(\v2\x1e.valhalla.mjolnir.Transit.NodeR\x05nodes\x12A\n" +
	"\n" +
	"stop_pairs\x18\x02 \x03(\v2\".valhalla.mjolnir.Transit.StopPairR\tstopPairs\x127\n" +
	"\x06routes\x18\x03 \x03(\v2\x1f.valhalla.mjolnir.Transit.RouteR\x06routes\x127\n" +
	"\x06shapes\x18\x04 \x03(\v2\x1f.valhalla.mjolnir.Transit.ShapeR\x06shapes\x1a\xd9\x03\n" +
	"\x04Node\x12\x10\n" +
	"\x03lon\x18\x01 \x01(\x01R\x03lon\x12\x10\n" +
	"\x03lat\x18\x02 \x01(\x01R\x03lat\x12\x12\n" +
	"\x04type\x18\x03 \x01(\rR\x04type\x12\x18\n" +
	"\agraphid\x18\x04 \x01(\x04R\agraphid\x12*\n" +
	"\x11prev_type_graphid\x18\x05 \x01(\x04R\x0fprevTypeGraphid\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"onestop_id\x18\a \x01(\tR\tonestopId\x121\n" +
	"\x15osm_connecting_way_id\x18\b \x01(\x04R\x12osmConnectingWayId\x12\x1a\n" +
	"\btimezone\x18\t \x01(\tR\btimezone\x12/\n" +
	"\x13wheelchair_boarding\x18\n" +
	" \x01(\bR\x12wheelchairBoarding\x12\x1c\n" +
	"\tgenerated\x18\v \x01(\bR\tgenerated\x12&\n" +
	"\x0etraversability\x18\f \x01(\rR\x0etraversability\x12,\n" +
	"\x12osm_connecting_lon\x18\r \x01(\x01R\x10osmConnectingLon\x12,\n" +
	"\x12osm_connecting_lat\x18\x0e \x01(\x01R\x10osmConnectingLat\x1a\x99\b\n" +
	"\bStopPair\x12#\n" +
	"\rbikes_allowed\x18\x01 \x01(\bR\fbikesAllowed\x12\x19\n" +
	"\bblock_id\x18\x02 \x01(\rR\ablockId\x128\n" +
	"\x18destination_arrival_time\x18\x03 \x01(\rR\x16destinationArrivalTime\x12/\n" +
	"\x13destination_graphid\x18\x04 \x01(\x04R\x12destinationGraphid\x124\n" +
	"\x16destination_onestop_id\x18\x05 \x01(\tR\x14destinationOnestopId\x123\n" +
	"\x16operated_by_onestop_id\x18\x06 \x01(\tR\x13operatedByOnestopId\x122\n" +
	"\x15origin_departure_time\x18\a \x01(\rR\x13originDepartureTime\x12%\n" +
	"\x0eorigin_graphid\x18\b \x01(\x04R\roriginGraphid\x12*\n" +
	"\x11origin_onestop_id\x18\t \x01(\tR\x0foriginOnestopId\x12\x1f\n" +
	"\vroute_index\x18\n" +
	" \x01(\rR\n" +
	"routeIndex\x12.\n" +
	"\x13service_added_dates\x18\v \x03(\rR\x11serviceAddedDates\x12/\n" +
	"\x14service_days_of_week\x18\f \x03(\bR\x11serviceDaysOfWeek\x12(\n" +
	"\x10service_end_date\x18\r \x01(\rR\x0eserviceEndDate\x120\n" +
	"\x14service_except_dates\x18\x0e \x03(\rR\x12serviceExceptDates\x12,\n" +
	"\x12service_start_date\x18\x0f \x01(\rR\x10serviceStartDate\x12#\n" +
	"\rtrip_headsign\x18\x10 \x01(\tR\ftripHeadsign\x12\x17\n" +
	"\atrip_id\x18\x11 \x01(\rR\x06tripId\x123\n" +
	"\x15wheelchair_accessible\x18\x12 \x01(\bR\x14wheelchairAccessible\x12\x19\n" +
	"\bshape_id\x18\x14 \x01(\rR\ashapeId\x120\n" +
	"\x14origin_dist_traveled\x18\x15 \x01(\x02R\x12originDistTraveled\x12:\n" +
	"\x19destination_dist_traveled\x18\x16 \x01(\x02R\x17destinationDistTraveled\x12,\n" +
	"\x12frequency_end_time\x18\x17 \x01(\rR\x10frequencyEndTime\x12:\n" +
	"\x19frequency_headway_seconds\x18\x18 \x01(\rR\x17frequencyHeadwaySeconds\x1a\xa5\x03\n" +
	"\x05Route\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"onestop_id\x18\x02 \x01(\tR\tonestopId\x12(\n" +
	"\x10operated_by_name\x18\x03 \x01(\tR\x0eoperatedByName\x123\n" +
	"\x16operated_by_onestop_id\x18\x04 \x01(\tR\x13operatedByOnestopId\x12.\n" +
	"\x13operated_by_website\x18\x05 \x01(\tR\x11operatedByWebsite\x12\x1f\n" +
	"\vroute_color\x18\x06 \x01(\rR\n" +
	"routeColor\x12\x1d\n" +
	"\n" +
	"route_desc\x18\a \x01(\tR\trouteDesc\x12&\n" +
	"\x0froute_long_name\x18\b \x01(\tR\rrouteLongName\x12(\n" +
	"\x10route_text_color\x18\t \x01(\rR\x0erouteTextColor\x12H\n" +
	"\fvehicle_type\x18\n" +
	" \x01(\x0e2%.valhalla.mjolnir.Transit.VehicleTypeR\vvehicleType\x1aG\n" +
	"\x05Shape\x12\x19\n" +
	"\bshape_id\x18\x01 \x01(\rR\ashapeId\x12#\n" +
	"\rencoded_shape\x18\x02 \x01(\fR\fencodedShape\"r\n" +
	"\vVehicleType\x12\t\n" +
	"\x05kTram\x10\x00\x12\n" +
	"\n" +
	"\x06kMetro\x10\x01\x12\t\n" +
	"\x05kRail\x10\x02\x12\b\n" +
	"\x04kBus\x10\x03\x12\n" +
	"\n" +
	"\x06kFerry\x10\x04\x12\r\n" +
	"\tkCableCar\x10\x05\x12\f\n" +
	"\bkGondola\x10\x06\x12\x0e\n" +
	"\n" +
	"kFunicular\x10\aBIH\x03ZEmatching-engine/internal/adapter/routing-engine/valhalla/client/pb;pb"

var (
	file_transit_proto_rawDescOnce sync.Once
	file_transit_proto_rawDescData []byte
)

func file_transit_proto_rawDescGZIP() []byte {
	file_transit_proto_rawDescOnce.Do(func() {
		file_transit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transit_proto_rawDesc), len(file_transit_proto_rawDesc)))
	})
	return file_transit_proto_rawDescData
}

var file_transit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transit_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_transit_proto_goTypes = []any{
	(Transit_VehicleType)(0), // 0: valhalla.mjolnir.Transit.VehicleType
	(*Transit)(nil),          // 1: valhalla.mjolnir.Transit
	(*Transit_Node)(nil),     // 2: valhalla.mjolnir.Transit.Node
	(*Transit_StopPair)(nil), // 3: valhalla.mjolnir.Transit.StopPair
	(*Transit_Route)(nil),    // 4: valhalla.mjolnir.Transit.Route
	(*Transit_Shape)(nil),    // 5: valhalla.mjolnir.Transit.Shape
}
var file_transit_proto_depIdxs = []int32{
	2, // 0: valhalla.mjolnir.Transit.nodes:type_name -> valhalla.mjolnir.Transit.Node
	3, // 1: valhalla.mjolnir.Transit.stop_pairs:type_name -> valhalla.mjolnir.Transit.StopPair
	4, // 2: valhalla.mjolnir.Transit.routes:type_name -> valhalla.mjolnir.Transit.Route
	5, // 3: valhalla.mjolnir.Transit.shapes:type_name -> valhalla.mjolnir.Transit.Shape
	0, // 4: valhalla.mjolnir.Transit.Route.vehicle_type:type_name -> valhalla.mjolnir.Transit.VehicleType
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_transit_proto_init() }
func file_transit_proto_init() {
	if File_transit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transit_proto_rawDesc), len(file_transit_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transit_proto_goTypes,
		DependencyIndexes: file_transit_proto_depIdxs,
		EnumInfos:         file_transit_proto_enumTypes,
		MessageInfos:      file_transit_proto_msgTypes,
	}.Build()
	File_transit_proto = out.File
	file_transit_proto_goTypes = nil
	file_transit_proto_depIdxs = nil
}

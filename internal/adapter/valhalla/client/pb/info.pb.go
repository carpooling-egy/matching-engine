// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: info.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// the type of statistic we are recording
type StatisticType int32

const (
	StatisticType_count  StatisticType = 0
	StatisticType_gauge  StatisticType = 1
	StatisticType_timing StatisticType = 2
	StatisticType_set    StatisticType = 3
)

// Enum value maps for StatisticType.
var (
	StatisticType_name = map[int32]string{
		0: "count",
		1: "gauge",
		2: "timing",
		3: "set",
	}
	StatisticType_value = map[string]int32{
		"count":  0,
		"gauge":  1,
		"timing": 2,
		"set":    3,
	}
)

func (x StatisticType) Enum() *StatisticType {
	p := new(StatisticType)
	*p = x
	return p
}

func (x StatisticType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatisticType) Descriptor() protoreflect.EnumDescriptor {
	return file_info_proto_enumTypes[0].Descriptor()
}

func (StatisticType) Type() protoreflect.EnumType {
	return &file_info_proto_enumTypes[0]
}

func (x StatisticType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatisticType.Descriptor instead.
func (StatisticType) EnumDescriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

type Statistic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                                // the key/name of the statistic
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`                          // the value of the statistic
	Frequency     float32                `protobuf:"fixed32,3,opt,name=frequency,proto3" json:"frequency,omitempty"`                  // how often to report the statistic [0-1]
	Type          StatisticType          `protobuf:"varint,4,opt,name=type,proto3,enum=valhalla.StatisticType" json:"type,omitempty"` // what type is it
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Statistic) Reset() {
	*x = Statistic{}
	mi := &file_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistic) ProtoMessage() {}

func (x *Statistic) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistic.ProtoReflect.Descriptor instead.
func (*Statistic) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

func (x *Statistic) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Statistic) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Statistic) GetFrequency() float32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *Statistic) GetType() StatisticType {
	if x != nil {
		return x.Type
	}
	return StatisticType_count
}

type CodedDescription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Code          uint64                 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodedDescription) Reset() {
	*x = CodedDescription{}
	mi := &file_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodedDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodedDescription) ProtoMessage() {}

func (x *CodedDescription) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodedDescription.ProtoReflect.Descriptor instead.
func (*CodedDescription) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{1}
}

func (x *CodedDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CodedDescription) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

type Info struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Statistics    []*Statistic           `protobuf:"bytes,1,rep,name=statistics,proto3" json:"statistics,omitempty"`                 // stats that we collect during request processing
	Errors        []*CodedDescription    `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`                         // errors that occurred during request processing
	Warnings      []*CodedDescription    `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`                     // warnings that occurred during request processing
	IsService     bool                   `protobuf:"varint,4,opt,name=is_service,json=isService,proto3" json:"is_service,omitempty"` // was this a service request/response rather than a direct call to the library
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Info) Reset() {
	*x = Info{}
	mi := &file_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{2}
}

func (x *Info) GetStatistics() []*Statistic {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *Info) GetErrors() []*CodedDescription {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Info) GetWarnings() []*CodedDescription {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *Info) GetIsService() bool {
	if x != nil {
		return x.IsService
	}
	return false
}

var File_info_proto protoreflect.FileDescriptor

const file_info_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"info.proto\x12\bvalhalla\"~\n" +
	"\tStatistic\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12\x1c\n" +
	"\tfrequency\x18\x03 \x01(\x02R\tfrequency\x12+\n" +
	"\x04type\x18\x04 \x01(\x0e2\x17.valhalla.StatisticTypeR\x04type\"H\n" +
	"\x10CodedDescription\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x04R\x04code\"\xc6\x01\n" +
	"\x04Info\x123\n" +
	"\n" +
	"statistics\x18\x01 \x03(\v2\x13.valhalla.StatisticR\n" +
	"statistics\x122\n" +
	"\x06errors\x18\x02 \x03(\v2\x1a.valhalla.CodedDescriptionR\x06errors\x126\n" +
	"\bwarnings\x18\x03 \x03(\v2\x1a.valhalla.CodedDescriptionR\bwarnings\x12\x1d\n" +
	"\n" +
	"is_service\x18\x04 \x01(\bR\tisService*:\n" +
	"\rStatisticType\x12\t\n" +
	"\x05count\x10\x00\x12\t\n" +
	"\x05gauge\x10\x01\x12\n" +
	"\n" +
	"\x06timing\x10\x02\x12\a\n" +
	"\x03set\x10\x03BIH\x03ZEmatching-engine/internal/adapter/routing-engine/valhalla/client/pb;pbb\x06proto3"

var (
	file_info_proto_rawDescOnce sync.Once
	file_info_proto_rawDescData []byte
)

func file_info_proto_rawDescGZIP() []byte {
	file_info_proto_rawDescOnce.Do(func() {
		file_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_info_proto_rawDesc), len(file_info_proto_rawDesc)))
	})
	return file_info_proto_rawDescData
}

var file_info_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_info_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_info_proto_goTypes = []any{
	(StatisticType)(0),       // 0: valhalla.StatisticType
	(*Statistic)(nil),        // 1: valhalla.Statistic
	(*CodedDescription)(nil), // 2: valhalla.CodedDescription
	(*Info)(nil),             // 3: valhalla.Info
}
var file_info_proto_depIdxs = []int32{
	0, // 0: valhalla.Statistic.type:type_name -> valhalla.StatisticType
	1, // 1: valhalla.Info.statistics:type_name -> valhalla.Statistic
	2, // 2: valhalla.Info.errors:type_name -> valhalla.CodedDescription
	2, // 3: valhalla.Info.warnings:type_name -> valhalla.CodedDescription
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_info_proto_init() }
func file_info_proto_init() {
	if File_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_info_proto_rawDesc), len(file_info_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_info_proto_goTypes,
		DependencyIndexes: file_info_proto_depIdxs,
		EnumInfos:         file_info_proto_enumTypes,
		MessageInfos:      file_info_proto_msgTypes,
	}.Build()
	File_info_proto = out.File
	file_info_proto_goTypes = nil
	file_info_proto_depIdxs = nil
}

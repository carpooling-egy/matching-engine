// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: status.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// oneof's are only returned on verbose=true
	//
	// Types that are valid to be assigned to HasHasTiles:
	//
	//	*Status_HasTiles
	HasHasTiles isStatus_HasHasTiles `protobuf_oneof:"has_has_tiles"`
	// Types that are valid to be assigned to HasHasAdmins:
	//
	//	*Status_HasAdmins
	HasHasAdmins isStatus_HasHasAdmins `protobuf_oneof:"has_has_admins"`
	// Types that are valid to be assigned to HasHasTimezones:
	//
	//	*Status_HasTimezones
	HasHasTimezones isStatus_HasHasTimezones `protobuf_oneof:"has_has_timezones"`
	// Types that are valid to be assigned to HasHasLiveTraffic:
	//
	//	*Status_HasLiveTraffic
	HasHasLiveTraffic isStatus_HasHasLiveTraffic `protobuf_oneof:"has_has_live_traffic"`
	// Types that are valid to be assigned to HasBbox:
	//
	//	*Status_Bbox
	HasBbox isStatus_HasBbox `protobuf_oneof:"has_bbox"`
	Version string           `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	TilesetLastModified uint32           `protobuf:"varint,7,opt,name=tileset_last_modified,json=tilesetLastModified,proto3" json:"tileset_last_modified,omitempty"`
	AvailableActions    []string         `protobuf:"bytes,8,rep,name=available_actions,json=availableActions,proto3" json:"available_actions,omitempty"`
	// Types that are valid to be assigned to HasHasTransitTiles:
	//
	//	*Status_HasTransitTiles
	HasHasTransitTiles isStatus_HasHasTransitTiles `protobuf_oneof:"has_has_transit_tiles"`
	// Types that are valid to be assigned to HasOsmChangeset:
	//
	//	*Status_OsmChangeset
	HasOsmChangeset isStatus_HasOsmChangeset `protobuf_oneof:"has_osm_changeset"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetHasHasTiles() isStatus_HasHasTiles {
	if x != nil {
		return x.HasHasTiles
	}
	return nil
}

func (x *Status) GetHasTiles() bool {
	if x != nil {
		if x, ok := x.HasHasTiles.(*Status_HasTiles); ok {
			return x.HasTiles
		}
	}
	return false
}

func (x *Status) GetHasHasAdmins() isStatus_HasHasAdmins {
	if x != nil {
		return x.HasHasAdmins
	}
	return nil
}

func (x *Status) GetHasAdmins() bool {
	if x != nil {
		if x, ok := x.HasHasAdmins.(*Status_HasAdmins); ok {
			return x.HasAdmins
		}
	}
	return false
}

func (x *Status) GetHasHasTimezones() isStatus_HasHasTimezones {
	if x != nil {
		return x.HasHasTimezones
	}
	return nil
}

func (x *Status) GetHasTimezones() bool {
	if x != nil {
		if x, ok := x.HasHasTimezones.(*Status_HasTimezones); ok {
			return x.HasTimezones
		}
	}
	return false
}

func (x *Status) GetHasHasLiveTraffic() isStatus_HasHasLiveTraffic {
	if x != nil {
		return x.HasHasLiveTraffic
	}
	return nil
}

func (x *Status) GetHasLiveTraffic() bool {
	if x != nil {
		if x, ok := x.HasHasLiveTraffic.(*Status_HasLiveTraffic); ok {
			return x.HasLiveTraffic
		}
	}
	return false
}

func (x *Status) GetHasBbox() isStatus_HasBbox {
	if x != nil {
		return x.HasBbox
	}
	return nil
}

func (x *Status) GetBbox() string {
	if x != nil {
		if x, ok := x.HasBbox.(*Status_Bbox); ok {
			return x.Bbox
		}
	}
	return ""
}

func (x *Status) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Status) GetTilesetLastModified() uint32 {
	if x != nil {
		return x.TilesetLastModified
	}
	return 0
}

func (x *Status) GetAvailableActions() []string {
	if x != nil {
		return x.AvailableActions
	}
	return nil
}

func (x *Status) GetHasHasTransitTiles() isStatus_HasHasTransitTiles {
	if x != nil {
		return x.HasHasTransitTiles
	}
	return nil
}

func (x *Status) GetHasTransitTiles() bool {
	if x != nil {
		if x, ok := x.HasHasTransitTiles.(*Status_HasTransitTiles); ok {
			return x.HasTransitTiles
		}
	}
	return false
}

func (x *Status) GetHasOsmChangeset() isStatus_HasOsmChangeset {
	if x != nil {
		return x.HasOsmChangeset
	}
	return nil
}

func (x *Status) GetOsmChangeset() uint64 {
	if x != nil {
		if x, ok := x.HasOsmChangeset.(*Status_OsmChangeset); ok {
			return x.OsmChangeset
		}
	}
	return 0
}

type isStatus_HasHasTiles interface {
	isStatus_HasHasTiles()
}

type Status_HasTiles struct {
	HasTiles bool `protobuf:"varint,1,opt,name=has_tiles,json=hasTiles,proto3,oneof"`
}

func (*Status_HasTiles) isStatus_HasHasTiles() {}

type isStatus_HasHasAdmins interface {
	isStatus_HasHasAdmins()
}

type Status_HasAdmins struct {
	HasAdmins bool `protobuf:"varint,2,opt,name=has_admins,json=hasAdmins,proto3,oneof"`
}

func (*Status_HasAdmins) isStatus_HasHasAdmins() {}

type isStatus_HasHasTimezones interface {
	isStatus_HasHasTimezones()
}

type Status_HasTimezones struct {
	HasTimezones bool `protobuf:"varint,3,opt,name=has_timezones,json=hasTimezones,proto3,oneof"`
}

func (*Status_HasTimezones) isStatus_HasHasTimezones() {}

type isStatus_HasHasLiveTraffic interface {
	isStatus_HasHasLiveTraffic()
}

type Status_HasLiveTraffic struct {
	HasLiveTraffic bool `protobuf:"varint,4,opt,name=has_live_traffic,json=hasLiveTraffic,proto3,oneof"`
}

func (*Status_HasLiveTraffic) isStatus_HasHasLiveTraffic() {}

type isStatus_HasBbox interface {
	isStatus_HasBbox()
}

type Status_Bbox struct {
	Bbox string `protobuf:"bytes,5,opt,name=bbox,proto3,oneof"`
}

func (*Status_Bbox) isStatus_HasBbox() {}

type isStatus_HasHasTransitTiles interface {
	isStatus_HasHasTransitTiles()
}

type Status_HasTransitTiles struct {
	HasTransitTiles bool `protobuf:"varint,9,opt,name=has_transit_tiles,json=hasTransitTiles,proto3,oneof"`
}

func (*Status_HasTransitTiles) isStatus_HasHasTransitTiles() {}

type isStatus_HasOsmChangeset interface {
	isStatus_HasOsmChangeset()
}

type Status_OsmChangeset struct {
	OsmChangeset uint64 `protobuf:"varint,10,opt,name=osm_changeset,json=osmChangeset,proto3,oneof"`
}

func (*Status_OsmChangeset) isStatus_HasOsmChangeset() {}

var File_status_proto protoreflect.FileDescriptor

const file_status_proto_rawDesc = "" +
	"\n" +
	"\fstatus.proto\x12\bvalhalla\"\x8b\x04\n" +
	"\x06Status\x12\x1d\n" +
	"\thas_tiles\x18\x01 \x01(\bH\x00R\bhasTiles\x12\x1f\n" +
	"\n" +
	"has_admins\x18\x02 \x01(\bH\x01R\thasAdmins\x12%\n" +
	"\rhas_timezones\x18\x03 \x01(\bH\x02R\fhasTimezones\x12*\n" +
	"\x10has_live_traffic\x18\x04 \x01(\bH\x03R\x0ehasLiveTraffic\x12\x14\n" +
	"\x04bbox\x18\x05 \x01(\tH\x04R\x04bbox\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x122\n" +
	"\x15tileset_last_modified\x18\a \x01(\rR\x13tilesetLastModified\x12+\n" +
	"\x11available_actions\x18\b \x03(\tR\x10availableActions\x12,\n" +
	"\x11has_transit_tiles\x18\t \x01(\bH\x05R\x0fhasTransitTiles\x12%\n" +
	"\rosm_changeset\x18\n" +
	" \x01(\x04H\x06R\fosmChangesetB\x0f\n" +
	"\rhas_has_tilesB\x10\n" +
	"\x0ehas_has_adminsB\x13\n" +
	"\x11has_has_timezonesB\x16\n" +
	"\x14has_has_live_trafficB\n" +
	"\n" +
	"\bhas_bboxB\x17\n" +
	"\x15has_has_transit_tilesB\x13\n" +
	"\x11has_osm_changesetBIH\x03ZEmatching-engine/internal/adapter/routing-engine/valhalla/client/pb;pbb\x06proto3"

var (
	file_status_proto_rawDescOnce sync.Once
	file_status_proto_rawDescData []byte
)

func file_status_proto_rawDescGZIP() []byte {
	file_status_proto_rawDescOnce.Do(func() {
		file_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_status_proto_rawDesc), len(file_status_proto_rawDesc)))
	})
	return file_status_proto_rawDescData
}

var file_status_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_status_proto_goTypes = []any{
	(*Status)(nil), // 0: valhalla.Status
}
var file_status_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_status_proto_init() }
func file_status_proto_init() {
	if File_status_proto != nil {
		return
	}
	file_status_proto_msgTypes[0].OneofWrappers = []any{
		(*Status_HasTiles)(nil),
		(*Status_HasAdmins)(nil),
		(*Status_HasTimezones)(nil),
		(*Status_HasLiveTraffic)(nil),
		(*Status_Bbox)(nil),
		(*Status_HasTransitTiles)(nil),
		(*Status_OsmChangeset)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_status_proto_rawDesc), len(file_status_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_status_proto_goTypes,
		DependencyIndexes: file_status_proto_depIdxs,
		MessageInfos:      file_status_proto_msgTypes,
	}.Build()
	File_status_proto = out.File
	file_status_proto_goTypes = nil
	file_status_proto_depIdxs = nil
}

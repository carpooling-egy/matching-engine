// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: sign.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TripSignElement struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Text             string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`                                                  // The actual sign element text, examples: I 95 North or Derry Street
	IsRouteNumber    bool                   `protobuf:"varint,2,opt,name=is_route_number,json=isRouteNumber,proto3" json:"is_route_number,omitempty"`        // true if sign element is a reference route number such as: I 81 South or US 322 West
	ConsecutiveCount uint32                 `protobuf:"varint,3,opt,name=consecutive_count,json=consecutiveCount,proto3" json:"consecutive_count,omitempty"` // The frequency of this sign element within a set a consecutive signs
	Pronunciation    *Pronunciation         `protobuf:"bytes,4,opt,name=pronunciation,proto3" json:"pronunciation,omitempty"`                                // The pronunciation associated with this sign element
	LanguageTag      LanguageTag            `protobuf:"varint,5,opt,name=language_tag,json=languageTag,proto3,enum=valhalla.LanguageTag" json:"language_tag,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TripSignElement) Reset() {
	*x = TripSignElement{}
	mi := &file_sign_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripSignElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripSignElement) ProtoMessage() {}

func (x *TripSignElement) ProtoReflect() protoreflect.Message {
	mi := &file_sign_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripSignElement.ProtoReflect.Descriptor instead.
func (*TripSignElement) Descriptor() ([]byte, []int) {
	return file_sign_proto_rawDescGZIP(), []int{0}
}

func (x *TripSignElement) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TripSignElement) GetIsRouteNumber() bool {
	if x != nil {
		return x.IsRouteNumber
	}
	return false
}

func (x *TripSignElement) GetConsecutiveCount() uint32 {
	if x != nil {
		return x.ConsecutiveCount
	}
	return 0
}

func (x *TripSignElement) GetPronunciation() *Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

func (x *TripSignElement) GetLanguageTag() LanguageTag {
	if x != nil {
		return x.LanguageTag
	}
	return LanguageTag_kUnspecified
}

type TripSign struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ExitNumbers            []*TripSignElement     `protobuf:"bytes,1,rep,name=exit_numbers,json=exitNumbers,proto3" json:"exit_numbers,omitempty"`                                    // The list of exit numbers, example: 67B
	ExitOntoStreets        []*TripSignElement     `protobuf:"bytes,2,rep,name=exit_onto_streets,json=exitOntoStreets,proto3" json:"exit_onto_streets,omitempty"`                      // The list of exit branch street names, examples: I 95 North or Baltimore-Washington Parkway
	ExitTowardLocations    []*TripSignElement     `protobuf:"bytes,3,rep,name=exit_toward_locations,json=exitTowardLocations,proto3" json:"exit_toward_locations,omitempty"`          // The list of exit toward locations, examples: New York or I 395 South
	ExitNames              []*TripSignElement     `protobuf:"bytes,4,rep,name=exit_names,json=exitNames,proto3" json:"exit_names,omitempty"`                                          // The list of exit names - not used much in US, example: Gettysburg Pike
	GuideOntoStreets       []*TripSignElement     `protobuf:"bytes,5,rep,name=guide_onto_streets,json=guideOntoStreets,proto3" json:"guide_onto_streets,omitempty"`                   // The list of guide branch street names, examples: US 22 West or Baltimore-Washington Parkway
	GuideTowardLocations   []*TripSignElement     `protobuf:"bytes,6,rep,name=guide_toward_locations,json=guideTowardLocations,proto3" json:"guide_toward_locations,omitempty"`       // The list of guide toward locations, examples: Lewistown or US 15
	JunctionNames          []*TripSignElement     `protobuf:"bytes,7,rep,name=junction_names,json=junctionNames,proto3" json:"junction_names,omitempty"`                              // The list of junction names, examples: 万年橋東 or Mannenbashi East
	GuidanceViewJunctions  []*TripSignElement     `protobuf:"bytes,8,rep,name=guidance_view_junctions,json=guidanceViewJunctions,proto3" json:"guidance_view_junctions,omitempty"`    // The list of guidance view junctions, examples: AB12345;1 or AB12345;E
	GuidanceViewSignboards []*TripSignElement     `protobuf:"bytes,9,rep,name=guidance_view_signboards,json=guidanceViewSignboards,proto3" json:"guidance_view_signboards,omitempty"` // The list of guidance view signboards, examples: SI_721701166;1 or SI_721701166;2
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TripSign) Reset() {
	*x = TripSign{}
	mi := &file_sign_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripSign) ProtoMessage() {}

func (x *TripSign) ProtoReflect() protoreflect.Message {
	mi := &file_sign_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripSign.ProtoReflect.Descriptor instead.
func (*TripSign) Descriptor() ([]byte, []int) {
	return file_sign_proto_rawDescGZIP(), []int{1}
}

func (x *TripSign) GetExitNumbers() []*TripSignElement {
	if x != nil {
		return x.ExitNumbers
	}
	return nil
}

func (x *TripSign) GetExitOntoStreets() []*TripSignElement {
	if x != nil {
		return x.ExitOntoStreets
	}
	return nil
}

func (x *TripSign) GetExitTowardLocations() []*TripSignElement {
	if x != nil {
		return x.ExitTowardLocations
	}
	return nil
}

func (x *TripSign) GetExitNames() []*TripSignElement {
	if x != nil {
		return x.ExitNames
	}
	return nil
}

func (x *TripSign) GetGuideOntoStreets() []*TripSignElement {
	if x != nil {
		return x.GuideOntoStreets
	}
	return nil
}

func (x *TripSign) GetGuideTowardLocations() []*TripSignElement {
	if x != nil {
		return x.GuideTowardLocations
	}
	return nil
}

func (x *TripSign) GetJunctionNames() []*TripSignElement {
	if x != nil {
		return x.JunctionNames
	}
	return nil
}

func (x *TripSign) GetGuidanceViewJunctions() []*TripSignElement {
	if x != nil {
		return x.GuidanceViewJunctions
	}
	return nil
}

func (x *TripSign) GetGuidanceViewSignboards() []*TripSignElement {
	if x != nil {
		return x.GuidanceViewSignboards
	}
	return nil
}

var File_sign_proto protoreflect.FileDescriptor

const file_sign_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"sign.proto\x12\bvalhalla\x1a\fcommon.proto\"\xf3\x01\n" +
	"\x0fTripSignElement\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12&\n" +
	"\x0fis_route_number\x18\x02 \x01(\bR\risRouteNumber\x12+\n" +
	"\x11consecutive_count\x18\x03 \x01(\rR\x10consecutiveCount\x12=\n" +
	"\rpronunciation\x18\x04 \x01(\v2\x17.valhalla.PronunciationR\rpronunciation\x128\n" +
	"\flanguage_tag\x18\x05 \x01(\x0e2\x15.valhalla.LanguageTagR\vlanguageTag\"\x9c\x05\n" +
	"\bTripSign\x12<\n" +
	"\fexit_numbers\x18\x01 \x03(\v2\x19.valhalla.TripSignElementR\vexitNumbers\x12E\n" +
	"\x11exit_onto_streets\x18\x02 \x03(\v2\x19.valhalla.TripSignElementR\x0fexitOntoStreets\x12M\n" +
	"\x15exit_toward_locations\x18\x03 \x03(\v2\x19.valhalla.TripSignElementR\x13exitTowardLocations\x128\n" +
	"\n" +
	"exit_names\x18\x04 \x03(\v2\x19.valhalla.TripSignElementR\texitNames\x12G\n" +
	"\x12guide_onto_streets\x18\x05 \x03(\v2\x19.valhalla.TripSignElementR\x10guideOntoStreets\x12O\n" +
	"\x16guide_toward_locations\x18\x06 \x03(\v2\x19.valhalla.TripSignElementR\x14guideTowardLocations\x12@\n" +
	"\x0ejunction_names\x18\a \x03(\v2\x19.valhalla.TripSignElementR\rjunctionNames\x12Q\n" +
	"\x17guidance_view_junctions\x18\b \x03(\v2\x19.valhalla.TripSignElementR\x15guidanceViewJunctions\x12S\n" +
	"\x18guidance_view_signboards\x18\t \x03(\v2\x19.valhalla.TripSignElementR\x16guidanceViewSignboardsB:H\x03Z6matching-engine/internal/adapter/valhalla/client/pb;pbP\x00b\x06proto3"

var (
	file_sign_proto_rawDescOnce sync.Once
	file_sign_proto_rawDescData []byte
)

func file_sign_proto_rawDescGZIP() []byte {
	file_sign_proto_rawDescOnce.Do(func() {
		file_sign_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sign_proto_rawDesc), len(file_sign_proto_rawDesc)))
	})
	return file_sign_proto_rawDescData
}

var file_sign_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sign_proto_goTypes = []any{
	(*TripSignElement)(nil), // 0: valhalla.TripSignElement
	(*TripSign)(nil),        // 1: valhalla.TripSign
	(*Pronunciation)(nil),   // 2: valhalla.Pronunciation
	(LanguageTag)(0),        // 3: valhalla.LanguageTag
}
var file_sign_proto_depIdxs = []int32{
	2,  // 0: valhalla.TripSignElement.pronunciation:type_name -> valhalla.Pronunciation
	3,  // 1: valhalla.TripSignElement.language_tag:type_name -> valhalla.LanguageTag
	0,  // 2: valhalla.TripSign.exit_numbers:type_name -> valhalla.TripSignElement
	0,  // 3: valhalla.TripSign.exit_onto_streets:type_name -> valhalla.TripSignElement
	0,  // 4: valhalla.TripSign.exit_toward_locations:type_name -> valhalla.TripSignElement
	0,  // 5: valhalla.TripSign.exit_names:type_name -> valhalla.TripSignElement
	0,  // 6: valhalla.TripSign.guide_onto_streets:type_name -> valhalla.TripSignElement
	0,  // 7: valhalla.TripSign.guide_toward_locations:type_name -> valhalla.TripSignElement
	0,  // 8: valhalla.TripSign.junction_names:type_name -> valhalla.TripSignElement
	0,  // 9: valhalla.TripSign.guidance_view_junctions:type_name -> valhalla.TripSignElement
	0,  // 10: valhalla.TripSign.guidance_view_signboards:type_name -> valhalla.TripSignElement
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sign_proto_init() }
func file_sign_proto_init() {
	if File_sign_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sign_proto_rawDesc), len(file_sign_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sign_proto_goTypes,
		DependencyIndexes: file_sign_proto_depIdxs,
		MessageInfos:      file_sign_proto_msgTypes,
	}.Build()
	File_sign_proto = out.File
	file_sign_proto_goTypes = nil
	file_sign_proto_depIdxs = nil
}
